universe = vanilla
log = logs/cluster_$(Cluster).log
output = logs/$(Process).out
error = logs/$(Process).err
#
executable = /home/karpel/backend/run_sim.sh
arguments = $(Process)
#
should_transfer_files = YES
when_to_transfer_output = ON_EXIT_OR_EVICT
transfer_input_files = http://proxy.chtc.wisc.edu/SQUID/karpel/python.tar.gz, /home/karpel/backend/simulacra.tar.gz, /home/karpel/backend/ionization.tar.gz, /home/karpel/backend/run_sim.py, inputs/$(Process).spec
transfer_output_remaps = "$(Process).sim = outputs/$(Process).sim ; $(Process).log = logs/$(Process).log ; $(Process).mp4 = outputs/$(Process).mp4"
#
+JobBatchName = "{batch_name}"
#
+is_resumable = {checkpoints}
+WantGlideIn = {flockglide}
+WantFlocking = {flockglide}
#
skip_filechecks = true
#
on_exit_hold = (ExitCode =!= 0)
periodic_release = (JobStatus == 5) && (HoldReasonCode == 3) && (CurrentTime - EnteredCurrentStatus >= 300) && (NumJobCompletions <= 10)
#
request_cpus = 1
request_memory = {memory}GB
request_disk = {disk}GB
#
materialize_max_idle = {max_idle}
#
queue {num_jobs}
